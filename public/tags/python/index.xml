<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on az1453</title>
    <link>https://anastagizeno.github.io/tags/python/</link>
    <description>Recent content in Python on az1453</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2019, Bingxing Kang. All rights reserved.</copyright>
    <lastBuildDate>Thu, 20 Jun 2019 17:21:03 +0800</lastBuildDate>
    
	<atom:link href="https://anastagizeno.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Asyncio in Python3</title>
      <link>https://anastagizeno.github.io/post/2019/06/using-asyncio-in-python3/</link>
      <pubDate>Thu, 20 Jun 2019 17:21:03 +0800</pubDate>
      
      <guid>https://anastagizeno.github.io/post/2019/06/using-asyncio-in-python3/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://learning.oreilly.com/library/view/using-asyncio-in/9781491999691/&#34;&gt;Using Asyncio in Python 3&lt;/a&gt; &lt;code&gt;by Caleb Hattingh Publisher: O&#39;Reilly Media, Inc. ISBN: 9781491999684&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My story is a lot like yours, only more interesting ’cause it involves robots.&lt;/p&gt;

&lt;p&gt;Bender, Futurama episode “30% Iron Chef”&lt;/p&gt;

&lt;p&gt;The most common question I receive about Asyncio in Python 3 is this: “What is it, and what do I do with it?” The following story provides a backdrop for answering these questions. The central focus of Asyncio is about how to best perform multiple concurrent tasks at the same time. And not just any sort of tasks, but specifically tasks that involve waiting periods. The key insight required with this style of programming is that while you wait for this task to complete, work on other tasks can be performed.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
[{"date":"7 May, 2025","subtitle":"我不是真的懂","tags":"服务端","title":"阿斯塔格菲鲁拉","url":"/archive/prepareforinterview_1_astaghfirullah/"},{"date":"6 May, 2025","subtitle":"愿真主怜悯他","tags":"服务端","title":"Raḥimahu Allāh","url":"/archive/prepareforinterview_2_daysatamap/"},{"date":"5 May, 2025","subtitle":"本地消息表实现跨库事务的链式一致性范式总结核心观点1. 本地消息表方案的本质是“链路分层 + 层间消息传递 + 每层自闭环” 每个服务或节点： 保证本地业","tags":"服务端","title":"系统设计之分布式事务","url":"/archive/prepareforinterview_3_2_distributed-transaction/"},{"date":"5 May, 2025","subtitle":"RoadMap：系统设计（资深后端开发岗位） 资深服务端开发，重点掌握系统设计逻辑与典型场景拆解，不深入运维与SRE方向 🧠 第一部分：系统设计核","tags":"服务端","title":"服务端面试之System Design汇总","url":"/archive/prepareforinterview_3_1_systemdesign/"},{"date":"5 May, 2025","subtitle":"之OS、Network篇","tags":"服务端","title":"服务端面试之OS、Network篇","url":"/archive/prepareforinterview_5_5_os_network/"},{"date":"4 May, 2025","subtitle":"ROUND-1机制类 题号 类型 面试点核心 1️⃣ 机制题 为什么 map 遍历是乱序的？请描述 Go map 内部的 bucket 和扩容机制，为什么选择 lazy deletion？ 2️⃣ 机","tags":"服务端","title":"服务端面试之GO（二）深度篇","url":"/archive/prepareforinterview_5_4_go/"},{"date":"4 May, 2025","subtitle":"Go 语言资深开发工程师）第一章总结：Go 语言语义与语言机制核心考点✅ 类型系统与值/引用行为📌 值类型 vs 引用类型 基本类型（int、float、st","tags":"服务端","title":"服务端面试之GO（一）基础篇","url":"/archive/prepareforinterview_5_3_go/"},{"date":"3 May, 2025","subtitle":"Redis 核心数据结构与高性能原理一、Redis 为什么快？ 单线程模型：避免多线程加锁和上下文切换，基于事件循环 + epoll。 纯内存存储：数据全部在内","tags":"服务端","title":"服务端面试之缓存、消息","url":"/archive/prepareforinterview_5_2_redis_mq/"},{"date":"3 May, 2025","subtitle":"Richard Phillips Feynman：学习-\u0026gt;教学-\u0026gt;纠错学习-\u0026gt;简化教学 I.执行流程小目录 SQL生命周期概览 解析阶段（Parse） 查询重写","tags":"服务端","title":"服务端面试之存储","url":"/archive/prepareforinterview_5_1_mysql/"},{"date":"3 May, 2025","subtitle":"线段张力Jerry.ai的面试题，leetcode上没这题，估计起码也得是个Medium，边界case多，调了老半天。 1线段是无限长的，初始","tags":"算法题","title":"刷题之额外记录","url":"/archive/prepareforinterview_7_record/"},{"date":"2 May, 2025","subtitle":"","tags":"算法题","title":"刷题之回溯、DFS","url":"/archive/prepareforinterview_6_4_backtrack_dfs/"},{"date":"2 May, 2025","subtitle":"开始一、动态规划 vs 回溯的核心区别 项目 动态规划（DP） 回溯（Backtracking） 解决问题类型 最值、计数问题（如最短路径、最大和） 组合、排","tags":"算法题","title":"刷题之动态规划","url":"/archive/prepareforinterview_6_3_dp/"},{"date":"1 May, 2025","subtitle":"双指针与滑动窗口技巧指南刷题记录-简单-双指针和滑动窗口 刷题记录-中级-双指针和滑动窗口 刷题记录-高级-双指针和滑动窗口 1. 特点与识别 对撞/配","tags":"算法题","title":"刷题之双指针、滑动窗口","url":"/archive/prepareforinterview_6_2_two-pointers-window/"},{"date":"1 May, 2025","subtitle":"RoadMap 题型分类与专属模版 数据结构题（链表、树、栈、队列、图） 双指针与滑动窗口 二分查找 动态规划 BFS/DFS 回溯／状态压缩 * 贪心算法 * 数学与位运算 堆与优先队列","tags":"算法题","title":"刷题之基础数据结构：树、链表、栈、堆","url":"/archive/prepareforinterview_6_1_base-data-structer/"},{"date":"31 December, 2024","subtitle":"泰德·卡辛斯基（Theodore Kaczynski） 开始 工业革命及其后果给人类带来灾难。虽使我们这些生活在“发达”国家者，预期寿命大为延长，","tags":"右派 值得深思 权力过程","title":"工业社会及其未来","url":"/archive/industrialsocietyanditsfuture/"},{"date":"11 March, 2024","subtitle":"冷静观察，沉着应付，稳住阵脚，埋头实干","tags":"没用的东西","title":"马鲁布拉永远阳光灿烂","url":"/archive/maroubra/"},{"date":"5 March, 2024","subtitle":"Operating Systems: Three Easy Pieces I 虚拟化 CPU虚拟化ch7我们介绍了调度的基本思想，并开发了两类方法。第一类是运行最短的工作，从而优化周转时间。第二类是交替运行所","tags":"操作系统","title":"操作系统：三件事","url":"/archive/threeeasypieces/"},{"date":"24 October, 2023","subtitle":"献给维多利亚·奥坎波 [1] 利德尔·哈特写的《欧洲战争史》第二百四十二页有段记载，说是十三个英国师（有一千四百门大炮支援）对塞尔—蒙托邦防线的进攻","tags":"博尔赫斯","title":"小径分岔的花园","url":"/archive/thegardenofforkingpaths/"}]